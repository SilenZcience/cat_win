name: Compile Binaries

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      max-parallel: 1
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
    env:
      bin: ${{ matrix.os == 'macos-latest' && './bin/darwin/catw' || matrix.os == 'windows-latest' && './bin/windows/catw.exe' || './bin/linux/catw' }}
    steps:
      - name: Git Checkout
        uses: actions/checkout@v4
        with:
          ref: 'dev'
      - name: Install Python 3.10
        id: python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          cache: 'pip'
      - name: Update PIP
        run: |
          python -m pip install --upgrade pip
      - name: Setup Compile Dependencies
        run: |
          python -m pip install --upgrade pyinstaller
      - name: Setup Code Dependencies
        run: |
          python -m pip install --upgrade -r ./workflowHelper/requirements.txt
      - name: Setup Version File
        run: |
          python -m workflowHelper.exeversion
      - name: Compile Package
        run: |
          python -m workflowHelper.build
      - name: Test Executable ${{ matrix.os }}
        run: |
          ${{ env.bin }} -h
          ${{ env.bin }} -v
          ${{ env.bin }} -p ${{ env.bin }} -R --debug
      - name: Show Changes
        run: |
          git status
      - name: Stash Changes
        run: |
          git config --local user.name 'github-actions[bot]'
          git config --local user.email 'github-actions[bot]@users.noreply.github.com'
          git add ./bin/*
          git stash -- bin
      - name: Fetch Binaries Branch
        run: |
          git fetch origin binaries
          git stash pop
      - name: Commit & Push
        run: |
          git add ./bin/*
          git commit -m "ðŸ¤–Compiled Binary for ${{ matrix.os }}."
          git push origin HEAD:binaries
        continue-on-error: true
